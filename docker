version: '3.8'

services:
    pihole:
        container_name: pihole
        image: pihole/pihole:latest
        ports:
            - "53:53/tcp"
            - "53:53/udp"
            - "67:67/udp"
            - "82:80/tcp"
        environment:
            - TZ=Etc/UTC
            - WEBPASSWORD=3zKf5q2gW8
        volumes:
            - './pihole/etc-pihole:/etc/pihole'
            - './pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
        cap_add:
            - NET_ADMIN
        restart: unless-stopped

    homeassistant:
        container_name: homeassistant
        image: ghcr.io/home-assistant/home-assistant:stable
        privileged: true
        restart: unless-stopped
        network_mode: "host"
        environment:
            - TZ=Etc/UTC
        volumes:
            - ./homeassistant:/config/

    qbittorrent:
        container_name: qbittorrent
        image: lscr.io/linuxserver/qbittorrent:latest
        restart: unless-stopped
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Etc/UTC
            - WEBUI_PORT=8080
            - TORRENTING_PORT=6881
        network_mode: service:vpn
        volumes:
            - ./jellyfin/qbittorrent:/config/
            - ./jellyfin/data:/data

    vpn:
      container_name: vpn
      image: qmcgaw/gluetun
      cap_add:
        - NET_ADMIN
      environment:
        - VPN_SERVICE_PROVIDER=protonvpn
        - OPENVPN_USER=7Wlb4dD32hrCujl0jg66RuSl
        - OPENVPN_PASSWORD=L6cE4BtV/WuaqR9eR3O3bhQs
        - SERVER_COUNTRIES=Netherlands
        - FREE_ONLY=on
      networks:
        - protonVPN
      ports:
        - 9091:9091
        - 51413:51413
        - 51413:51413/udp
        - 8080:8080
        - 6881:6881
        - 6881:6881/udp
      restart: "unless-stopped"

    sonarr:
        container_name: sonarr
        image: lscr.io/linuxserver/sonarr:latest
        restart: unless-stopped
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Etc/UTC
        ports:
            - "8989:8989"
        volumes:
            - ./jellyfin/sonarr:/config/
            - ./jellyfin/data:/data

    radarr:
        container_name: radarr
        image: lscr.io/linuxserver/radarr:latest
        restart: unless-stopped
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Etc/UTC
        ports:
            - "7878:7878"
        volumes:
            - ./jellyfin/radarr:/config/
            - ./jellyfin/data:/data

    readarr:
        image: lscr.io/linuxserver/readarr:develop
        container_name: readarr
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Etc/UTC
        volumes:
            - ./jellyfin/readarr:/config
            - ./jellyfin/data:/data
        ports:
            - 8787:8787
        restart: unless-stopped

    jellyfin:
        container_name: jellyfin
        image: jellyfin/jellyfin
        network_mode: 'host'
        restart: unless-stopped
        volumes:
            - ./jellyfin/jellyfin-config:/config/
            - ./jellyfin/jellyfin-cache:/cache/
            - ./jellyfin/data:/data

    jellyseerr:
        container_name: jellyseerr
        image: fallenbagel/jellyseerr:latest
        restart: unless-stopped
        environment:
            - LOG_LEVEL=debug
            - TZ=Etc/UTC
        ports:
            - 5055:5055
        volumes:
            - ./jellyfin/jellyseerr:/app/config
            - ./jellyfin/data:/data

    prowlarr:
        container_name: prowlarr
        image: lscr.io/linuxserver/prowlarr:latest
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Etc/UTC
        volumes:
            - ./jellyfin/prowlarr:/config/
            - ./jellyfin/data:/data
        ports:
            - 9696:9696
        restart: unless-stopped

    nextcloud:
        image: nextcloud
        container_name: nextcloud
        restart: unless-stopped
        networks: 
            - cloud
        depends_on:
            - nextclouddb
            - redis
        ports:
            - 8081:80
        volumes:
            - ./nextcloud/html:/var/www/html
            - ./nextcloud/custom_apps:/var/www/html/custom_apps
            - ./nextcloud/config:/var/www/html/config
            - ./nextcloud/data:/var/www/html/data
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=America/Los_Angeles
            - MYSQL_DATABASE=nextcloud
            - MYSQL_USER=nextcloud
            - MYSQL_PASSWORD=dbpassword
            - MYSQL_HOST=nextclouddb
            - REDIS_HOST=redis

    nextclouddb:
        image: mariadb
        container_name: nextcloud-db
        restart: unless-stopped
        command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
        networks: 
            - cloud
        volumes:
            - ./nextcloud/nextclouddb:/var/lib/mysql
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=America/Los_Angeles
            - MYSQL_RANDOM_ROOT_PASSWORD=true
            - MYSQL_PASSWORD=dbpassword
            - MYSQL_DATABASE=nextcloud
            - MYSQL_USER=nextcloud
        
    collabora:
        image: collabora/code
        container_name: collabora
        restart: unless-stopped
        networks: 
            - cloud
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=America/Los_Angeles
            - password=password
            - username=nextcloud
            - domain=example.com
            - extra_params=--o:ssl.enable=true
        ports:
            - 9980:9980

    redis:
        image: redis:alpine
        container_name: redis
        restart: unless-stopped
        volumes:
            - ./nextcloud/redis:/data  
        networks: 
            - cloud
    
    nginx-proxy:
        image: 'jc21/nginx-proxy-manager:latest'
        container_name: nginx-proxy
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=America/Los_Angeles
        restart: unless-stopped
        ports:
            - '80:80'
            - '81:81'
            - '443:443'
        volumes:
            - ./nextcloud/data:/data
            - ./nextcloud/letsencrypt:/etc/letsencrypt

    nginx:
        container_name: nginx
        image: nginx:latest
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        restart: unless-stopped
        networks:
            - proxy_network

networks:
    protonVPN:
        external: true
    cloud:
        name: cloud
        driver: bridge
    proxy_network:
        driver: bridge