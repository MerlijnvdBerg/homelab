worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Map hostnames (subdomains) to target container:port combinations.
    map $host $target {
         hostnames;
         default                        "";
         homeassistant.therobo.nl       homeassistant:8123;
         qbittorrent.therobo.nl         qbittorrent:8080;
         sonarr.therobo.nl              sonarr:8989;
         radarr.therobo.nl              radarr:7878;
         readarr.therobo.nl             readarr:8787;
         jellyfin.therobo.nl            jellyfin:8096;
         jellyseerr.therobo.nl          jellyseerr:5055;
         prowlarr.therobo.nl            prowlarr:9696;
         nextcloud.therobo.nl           nextcloud:8081;
         collabora.therobo.nl           collabora:9980;
         pihole.therobo.nl              pihole:8082;
    }

    server {
         listen 80;
         server_name *.therobo.nl;
         
         # Use Dockerâ€™s embedded DNS resolver.
         resolver 127.0.0.11 valid=30s;

         location / {
              if ($target = "") {
                  return 404;
              }
              proxy_pass http://$target;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
         }
    }
}
